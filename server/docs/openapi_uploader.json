{
  "openapi": "3.0.3",
  "info": {
    "title": "MinIO File Upload API",
    "version": "1.0.0",
    "description": "API для загрузки, получения и удаления файлов в облачном хранилище MinIO."
  },
  "servers": [
    {
      "url": "http://localhost:8081"
    }
  ],
  "paths": {
    "/files/one": {
      "post": {
        "summary": "Загрузить один файл",
        "description": "Загрузка одного файла в MinIO. Ожидается form-data с параметром \"file\" в postman. Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример  ``` Authorization Bearer <твой_access_token> ``` ",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Файл успешно загружен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Получить один файл",
        "description": "Получение URL загруженного файла по двум query-параметрам: id и type. Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример ``` Authorization Bearer <твой_access_token> ``` ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор файла (например, \"67/6d5d3a3e-55c3-4881-b359-1379e7105a6c\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип файла. Допустимые значения: photo, video, text, unknown.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "photo",
                "video",
                "text",
                "unknown"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файл получен успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Файл не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить один файл",
        "description": "Удаление одного файла в MinIO по query-параметрам id и type. Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример ``` Authorization Bearer <твой_access_token> ``` ",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор файла (например, \"1/b3c338ff-cfc1-43f8-927e-bfd96d63a762\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип файла. Допустимые значения: photo, video, text, unknown.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "photo",
                "video",
                "text",
                "unknown"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файл удалён успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Файл не найден",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/files/many": {
      "post": {
        "summary": "Загрузить несколько файлов",
        "description": "Загрузка нескольких файлов в MinIO. Ожидается form-data с параметром \"files\", содержащим   массив файлов.  Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример ``` Authorization Bearer <твой_access_token> ``` ",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Файлы успешно загружены",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Получить несколько файлов",
        "description": "Получение URL нескольких файлов через query-параметры. Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример  ``` Authorization Bearer <твой_access_token> ``` ",
        "parameters": [
          {
            "name": "object_ids",
            "in": "query",
            "description": "Массив идентификаторов файлов в формате JSON пример json body",
            "required": true,
            "schema": {
              "type": "string",
              "example": "[{\"obj_id\":\"67/703c96f6-6818-4ad9-85a1-3325e2795b19\",\"file_category\":\"video\"},{\"obj_id\":\"67/6d5d3a3e-55c3-4881-b359-1379e7105a6c\",\"file_category\":\"photo\"}]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файлы получены успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Файл(ы) не найдены",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Удалить несколько файлов",
        "description": "Удаление нескольких файлов в MinIO через query-параметры. Для доступа нужно передать access токен(который на фронтенде должен храниться в local storage). access токен нужно передавать в HTTP-заголовке Authorization, в следующем виде, пример  ``` Authorization Bearer <твой_access_token> ``` ",
        "parameters": [
          {
            "name": "object_ids",
            "in": "query",
            "description": "Массив идентификаторов файлов в формате JSON",
            "required": true,
            "schema": {
              "type": "string",
              "example": "[{\"obj_id\":\"4/7a3314c2-17d2-4d40-939d-c55a7fcc56c7\",\"file_category\":\"photo\"},{\"obj_id\":\"4/082c0b1f-5f19-4d76-8297-535f369c0c48\",\"file_category\":\"photo\"}]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файлы удалены успешно",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Файл(ы) не найдены",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "File uploaded successfully"
          },
          "data": {
            "oneOf": [
              {
                "type": "string",
                "example": "http://minio-server/path/to/file.jpg"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "http://minio-server/path/to/file1.jpg",
                  "http://minio-server/path/to/file2.jpg"
                ]
              }
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "error": {
            "type": "string",
            "example": "No file is received"
          },
          "details": {
            "type": "string",
            "example": "Detailed error message"
          }
        }
      },
      "ObjectID": {
        "type": "object",
        "properties": {
          "obj_id": {
            "type": "string",
            "example": "67/6d5d3a3e-55c3-4881-b359-1379e7105a6c"
          },
          "file_category": {
            "type": "string",
            "description": "Тип файла",
            "enum": [
              "photo",
              "video",
              "text",
              "unknown"
            ],
            "example": "photo"
          }
        }
      },
      "ObjectIDsDto": {
        "type": "object",
        "properties": {
          "object_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectID"
            }
          }
        },
        "example": {
          "object_ids": [
            {
              "obj_id": "67/703c96f6-6818-4ad9-85a1-3325e2795b19",
              "file_category": "video"
            },
            {
              "obj_id": "67/6d5d3a3e-55c3-4881-b359-1379e7105a6c",
              "file_category": "photo"
            }
          ]
        }
      }
    }
  }
}