

services:
  
  db:
    container_name: auth_db
    image: postgres:14-alpine
    env_file:
      - ./server/auth_service/.env
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
    networks:
      - app-network

  auth-service:
    container_name: auth_service
    build:
      context: ./server/auth_service
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: .env
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      - app-network

  file-upload-service:
    container_name: file_upload_service
    build:
      context: ./server/file_upload_service
      dockerfile: Dockerfile
    extra_hosts:
      - "localhost:host-gateway"
    ports:
      - 8081:8081
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  minio:
    container_name: minio
    image: minio/minio
    env_file:
      - ./server/file_upload_service/.env
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9002:9002"
    command: server /data --console-address ":9002"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 5




  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app-network
 

  frontend:
     build:
       context: ./client  # Путь к папке с Dockerfile
     container_name: frontend_container
     ports:
       - "3000:3000"
     depends_on:
       - auth-service  # Зависит от auth-service
       - file-upload-service  # Зависит от file-upload-service
     networks:
       - app-network 
     environment:
       - NEXT_PUBLIC_API_URL=http://auth-service:8000  # API для аутентификации
       - NEXT_PUBLIC_FILE_API_URL=http://file-upload-service:8001  # API для загрузки файлов
    
  
  


volumes:
  db_data:
  minio_data:

networks:
  app-network:
    driver: bridge