version: "3.8"

services:

  auth_db:
    container_name: auth_db
    image: postgres:14-alpine
    env_file:
      - ./server/auth_service/.env
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ./server/auth_service/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - app-network

  auth-service:
    container_name: auth_service
    build:
      context: ./server/auth_service
      dockerfile: Dockerfile
    env_file:
      - ./server/auth_service/.env
    depends_on:
      - auth_db
    ports:
      - "8080:8080"
    networks:
      - app-network

  file_upload_db:
    container_name: file_upload_db
    image: postgres:14-alpine
    env_file:
      - ./server/file_upload_service/.env
    volumes:
      - file_upload_db_data:/var/lib/postgresql/data
      - ./server/file_upload_service/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
    networks:
      - app-network

  file-upload-service:
    container_name: file_upload_service
    build:
      context: ./server/file_upload_service
      dockerfile: Dockerfile
    env_file:
      - ./server/file_upload_service/.env
    extra_hosts:
      - "localhost:host-gateway"
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_started
      file_upload_db:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - app-network

  minio:
    container_name: minio
    image: minio/minio
    env_file:
      - ./server/file_upload_service/.env
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9002:9002"
    command: server /data --console-address ":9002"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

#  frontend:
#    container_name: frontend_container
#    build:
#      context: ./client
#    environment:
#      - NEXT_PUBLIC_API_URL=http://auth-service:8080
#      - NEXT_PUBLIC_FILE_API_URL=http://file-upload-service:8081
#    depends_on:
#      - auth-service
#      - file-upload-service
#    ports:
#      - "3000:3000"
#    networks:
#      - app-network

volumes:
  auth_db_data:
  file_upload_db_data:
  minio_data:

networks:
  app-network:
    driver: bridge